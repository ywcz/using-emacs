#+STARTUP: overview
* interface weaks
  #+begin_src emacs-lisp
    (setq inhibit-startup-message t)
    (tool-bar-mode -1)
    (require 'org-tempo)
    (fset 'yes-or-no-p 'y-or-n-p)
    ;; 更改显示字体大小
    (set-face-attribute 'default nil :font "Eurostile LT Std 12")
    (dolist (charset '(kana han symbol cjk-misc bopomofo))
      (set-fontset-font (frame-parameter nil 'font)
			charset (font-spec :family "KaiTi" :size 20)))
  #+end_src
* try
  #+begin_src emacs-lisp
    (use-package try
      :ensure t)
  #+end_src
* which-key
  #+begin_src emacs-lisp
    (use-package which-key
      :ensure t
      :config (which-key-mode)) 
  #+end_src
* org-bullets
  #+begin_src emacs-lisp
    (use-package org-bullets
      :ensure t
      :config (add-hook 'org-mode-hook #'org-bullets-mode))
  #+end_src
* counsel
  #+begin_src emacs-lisp
    (use-package counsel
      :ensure t
      )
  #+end_src
* ivy swiper
  #+begin_src emacs-lisp
    (use-package ivy
      :ensure t
      :diminish (ivy-mode)
      :bind (("C-x b" . ivy-switch-buffer))
      :config
      (ivy-mode 1)
      (setq ivy-use-virtual-buffers t)
      (setq ivy-display-style 'fancy))

    (use-package swiper
      :ensure try
      :config
      (progn
	(ivy-mode)
	(setq ivy-use-virtual-buffers t)
	(setq enable-recursive-minibuffers t)
	;; enable this if you want `swiper' to use it
	;; (setq search-default-mode #'char-fold-to-regexp)
	(global-set-key "\C-s" 'swiper)
	(global-set-key (kbd "C-c C-r") 'ivy-resume)
	(global-set-key (kbd "<f6>") 'ivy-resume)
	(global-set-key (kbd "M-x") 'counsel-M-x)
	(global-set-key (kbd "C-x C-f") 'counsel-find-file)
	(global-set-key (kbd "<f1> f") 'counsel-describe-function)
	(global-set-key (kbd "<f1> v") 'counsel-describe-variable)
	(global-set-key (kbd "<f1> o") 'counsel-describe-symbol)
	(global-set-key (kbd "<f1> l") 'counsel-find-library)
	(global-set-key (kbd "<f2> i") 'counsel-info-lookup-symbol)
	(global-set-key (kbd "<f2> u") 'counsel-unicode-char)
	(global-set-key (kbd "C-c g") 'counsel-git)
	(global-set-key (kbd "C-c j") 'counsel-git-grep)
	(global-set-key (kbd "C-c k") 'counsel-ag)
	(global-set-key (kbd "C-x l") 'counsel-locate)
	(global-set-key (kbd "C-S-o") 'counsel-rhythmbox)
	(define-key minibuffer-local-map (kbd "C-r") 'counsel-minibuffer-history)))
  #+end_src
* restart-emacs
  #+begin_src emacs-lisp
    (use-package restart-emacs
      :ensure t)
  #+end_src
* benchmark-init
  #+begin_src emacs-lisp
    (use-package benchmark-init
      :ensure t
      :config
      ;; To disable collection of benchmark data after init is done.
      (add-hook 'after-init-hook 'benchmark-init/deactivate))
  #+end_src
* company
  #+begin_src emacs-lisp
    (use-package company
      :ensure t
      :config
      (add-hook 'after-init-hook 'global-company-mode))
  #+end_src
* monokai-theme
  #+begin_src emacs-lisp
    (use-package monokai-theme
      :ensure t
      :init
      (load-theme 'monokai t))
  #+end_src
* ox-reveal
  #+begin_src emacs-lisp
    (use-package ox-reveal
      :ensure t
      :config
      (reveal-mode 1))
    (setq org-reveal-root "file:///d:/cc/reveal")
    (setq org-reveal-mathjax t)
  #+end_src
* other
  ;;(setq indo-enable-flex-matching t)
  ;;(setq ido-everywhere t)
  ;;(ido-mode 1)
  ;;(defalias 'list-buffe
